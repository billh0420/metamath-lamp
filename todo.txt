- print a proof table in the "show proof" dialog (with possibility to hide floatings).
- hide "plus" button on nodes without children in the proof tree.
- implement a builder of statements.
- add "About" page.
- add "terminate" button to the file web loader.
- add "restore defaults" buttons to Settings.
- check if adding a cache to proveStmtBottomUp() (for getParents) improves performance.
- move word "justification" outside the paper.
- in the "search" dialog, in the pattern text field, replace variables with their types.
- check exporting local variables when they are used implicitly in the proof.
- fix mistakes in tooltips.
- improve performance of MM_cmp_proof_node
- provide more info on substitution found when "Could not unify essential hypothesis #1"
- export only required disj
- export only required vars
- write a test for allowNewDisjForExistingVars
- add an int test when a hyp is used in a bottom-up proof being applied.
- proof tree improvements:
    - pass error icon from src to all unproved children
    - sort srcs by var type, hyp, asrt
    - filter by asrt, min number of srcs
- error messages for some specific cases
    * number of args doesn't match
    * could not prove type of floating
    * missing disjoint
    * failing disjoint
- In prove bottom up, similar to checks for var types and hyps, also check assertions without eHyps for node.dist==maxDepth.
- write tests for collecting debug info

- Automatically create correct labels for hypotheses.
- implement table view in the editor.
- tooltip: To start a new line in a multiline text editor press Shift+Enter
- load *.mm files from metamath.org
- add onEnter and onEscape wherever possible.
- Make new stmt prefix configurable.
- before merging of statements check if some statements should be moved up because they are referenced by above statements and don't merge in that case.
- autofocus label selector after scope is set to StopBefore or StopAfter
- in cmp_search use array2.slice and store idx in the rendered elem the same way as in cmp_bottom_up
- add an int test with few hypotheses.
- apply colors to search results, substitutions.
- fix a bug:
    1) load an MM file, apply changes;
    2) load same file in the same file selector - nothing happens.
- prefix for new statements
- write tests for both versions of verifyDisjoints (in MM_subs and MM_wrk_editor)
- add possibility to comment statements
- make error messages more informative: add the statement caused the error (for example in "variables" or in justifications).
- write tests for editorState -> proofTree -> editorState.
- correct methods related to movement of statements, they became incorrect after automatic reordering.
- use Async/Await.
- precalculate number of combinations (store in an array)
- use uncurried functions everywhere
- replace a[i] with a->Js_array2.unsafe_get(i), or open Belt and replace with Option.getExn